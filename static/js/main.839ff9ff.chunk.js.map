{"version":3,"sources":["context/UserContext.js","context/UserProvider.js","components/InfoInsurance.js","components/Headline.js","components/LoginForm.js","components/Login.js","components/InsuredPeopleTable.js","components/Step.js","components/RegisterForm.js","components/Register.js","components/InsurancePlan.js","components/PlanBenefits.js","components/AccordionServiceItem.js","components/ChooseProtectionForm.js","components/RegisterSuccessFul.js","components/ChooseProtection.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","UserProvider","children","console","log","useState","userData","setUserData","insureds","setInsureds","Provider","value","InfoInsurance","props","showInfo","width","className","src","alt","Headline","title1","title2","subtitle","LoginForm","useForm","register","handleSubmit","errors","formState","maxAllowedDate","moment","Date","subtract","format","onSubmit","data","e","a","preventDefault","type","href","nDoc","id","name","required","message","pattern","validate","length","htmlFor","dateOfBirth","max","phone","acceptPersonalData","acceptCommercialCommunication","Login","isSubmitted","setIsSubmitted","isValidUser","setIsValidUser","user","useContext","successfulResponse","axios","post","response","tipo","tercero","to","formatDateOfBirth","includes","formattedFNac","split","InsuredPeopleTable","removeInsured","scope","map","insured","i","lastNamePat","lastNameMat","genre","onClick","colSpan","Step","step","RegisterForm","dateFormat","limitDate","setMaxAllowedDate","showInsuredsTable","setShowInsuredsTable","addInsured","setValue","apellidoMaterno","apellidoPaterno","fecNacimiento","nombres","numDocumento","sexo","formattedDateOfBirth","useEffect","shouldValidate","resetInputs","target","reset","insurance","Register","insuredPeople","uuidv4","filter","InsurancePlan","planName","price","PlanBenefits","planPrice","benefits","benef1","benef2","benef3","benef4","enableBenefit","benef","AccordionServiceItem","collapsed","descServiceItem","expanded","idAccordion","numberItem","titleItem","ChooseProtectionForm","maxCoverage","setMaxCoverage","planCoverageName","setPlanCoverageName","listOfBenefits","setListOfBenefits","servicesAndExclusions","changePlanData","coverage","planCovName","listBenefits","plan","defaultChecked","servAndExcl","RegisterSuccessFul","memo","ChooseProtection","isRegistered","setIsRegistered","client","shift","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.839ff9ff.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst UserContext = createContext();\n\nexport default UserContext;\n\n\n\n\n","import { useState } from 'react';\nimport UserContext from './UserContext';\n\nconst UserProvider = ({ children }) => {\n\n    console.log('UserProvider');\n    const [userData, setUserData] = useState([]);\n    const [insureds, setInsureds] = useState([]);\n\n    return (\n        <UserContext.Provider value={{ userData, setUserData, insureds, setInsureds }}>\n            { children }\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InfoInsurance = props => {\n\n    const { showInfo, width } = props;\n\n    return (\n        <section className={width}>\n            <section className=\"\">\n                <article className=\"position-relative text-left\">\n                    <img className=\"w-75\" src=\"/img/Base.png\" alt=\"Base\" />\n                   </article>\n                { showInfo && \n                    <article className=\"position-absolute top-0 m-5 p-left-80 text-white\">\n                        <h1 className=\"my-1 pt-3\">Seguro de</h1>\n                        <h1 className=\"my-1 fw-bold\">Salud</h1>\n                        <ul className=\"fs-5\">\n                            <li className=\"my-2\">Cómpralo de manera fácil y rápida</li>\n                            <li className=\"my-2\">Cotiza y compra tu seguro 100% digital</li>\n                            <li className=\"my-2\">Hasta S/.12 millones de cobertura anual</li>\n                            <li className=\"my-2\">Más de 300 clínicas en todo el Perú</li>\n                        </ul>\n                        <span className=\"text-white-50\">&#169; 2020 Seguros y reaseguros</span>\n                    </article>   \n                }\n            </section>          \n        </section>\n    )\n}\n\nexport default InfoInsurance\n\nInfoInsurance.propTypes = {\n    showInfo: PropTypes.bool.isRequired,\n    width: PropTypes.string.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Headline = props => {\n\n    const { title1, title2, subtitle } = props;\n\n    return (\n        <article className=\"my-2 headline-form\">\n            <h2 className=\"my-2\">{title1} <span className=\"text-primary\">{title2}</span></h2>\n            <p className=\"mt-4 mb-2\">{subtitle}</p>\n        </article> \n    )\n};\n\nexport default Headline;\n\nHeadline.propTypes = {\n    title1: PropTypes.string.isRequired,\n    title2: PropTypes.string.isRequired,\n    subtitle: PropTypes.string.isRequired\n}","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Dropdown } from \"bootstrap/dist/js/bootstrap.esm.min\";\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\n//components\nimport Headline from './Headline';\n\nconst LoginForm = props => {\n\n    const adultMinAge = 18;\n    const { register, handleSubmit, formState: { errors } } = useForm();    \n    const maxAllowedDate = moment(new Date()).subtract(adultMinAge, \"years\").format(\"YYYY-MM-DD\");\n\n    const onSubmit = async (data, e) => {\n        e.preventDefault();\n        \n        if(errors){\n            props.onSubmit(data);\n        }\n    }\n\n    return (\n        <section className=\"col-4 text-secondary p-5\">\n                <section className=\"mx-auto p-right-80\">\n                    <Headline title1=\"Obtén tu \" title2=\"seguro ahora\" subtitle=\"Ingresa los datos para comenzar\" />      \n                    <article className=\"my-4 form\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                            <div className=\"form-floating input-group mb-3\">\n                                <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">DNI</button>\n                                <ul className=\"dropdown-menu\">\n                                    <li><a className=\"dropdown-item\" href=\"!#\">DNI</a></li>\n                                    <li><a className=\"dropdown-item\" href=\"!#\">CE</a></li>\n                                </ul>\n                                <input \n                                    aria-label=\"Tipo doc.\"\n                                    className={`form-control ${errors.nDoc ? 'is-invalid' : ''}`}\n                                    id=\"nDoc\" \n                                    name=\"nDoc\" \n                                    type=\"num\" \n                                    {...register(\"nDoc\", { \n                                        required:{\n                                            value: true,\n                                            message: 'Debe ingresar un documento de identidad' \n                                        },\n                                        pattern: {\n                                            value: /^[0-9]*$/,\n                                            message: 'El nro. de doc. sólo debe tener números'\n                                        },\n                                        validate: value => value.length === 8 || 'El nro. de doc. debe tener 8 dígitos' \n                                    })}\n                                />\n                                <label className=\"ms-5 ps-4\" htmlFor=\"nDoc\">Nro. de documento</label>\n                            </div>\n                            <div className=\"mb-3\">\n                                <span className=\"invalid-feedback text-small d-block\">\n                                    {errors?.nDoc?.message}\n                                </span>\n                            </div>                                \n                            <div className=\"form-floating mb-3\">\n                                <input \n                                    className={`form-control ${errors.dateOfBirth ? 'is-invalid' : ''}`}                                    \n                                    id=\"dateOfBirth\" \n                                    name=\"dateOfBirth\"\n                                    type=\"date\"\n                                    max={maxAllowedDate}                                 \n                                    {...register(\"dateOfBirth\", { \n                                        required:{\n                                            value: true,\n                                            message: 'Debe ingresar una fecha' \n                                        } \n\n                                    })}\n                                />\n                                <label htmlFor=\"dateOfBirth\">Fecha de nacimiento</label>\n                            </div>\n                            <div className=\"mb-3\">\n                                <span className=\"invalid-feedback text-small d-block\">\n                                    {errors?.dateOfBirth?.message}\n                                </span>\n                            </div>\n                            <div className=\"form-floating mb-3\">\n                                <input                     \n                                    className={`form-control ${errors.phone ? 'is-invalid' : ''}`} \n                                    id=\"phone\" \n                                    name=\"phone\"\n                                    type=\"tel\" \n                                    {...register(\"phone\", { \n                                            required: 'Debe ingresar un celular',\n                                            pattern: {\n                                                value: /^[0-9]*$/,\n                                                message: 'El nro. de celular sólo debe tener números'\n                                            },\n                                            validate: value => value.length === 9 || 'El nro. de celular debe tener 9 dígitos'                       \n                                        })}                    \n                                />\n                                <label htmlFor=\"phone\">Celular</label>\n                            </div>\n                            <div className=\"mb-3\">\n                                <span className=\"invalid-feedback text-small d-block\">\n                                    {errors?.phone?.message}\n                                </span>\n                            </div>\n                            <div className=\"form-check mb-3\">\n                                <input \n                                    className={`form-check-input ${errors.acceptPersonalData ? 'is-invalid' : ''}`}                                    \n                                    id=\"acceptPersonalData\" \n                                    name=\"acceptPersonalData\"\n                                    type=\"checkbox\" \n                                    value=\"1\" \n                                    {...register(\"acceptPersonalData\", { \n                                        required:{\n                                            value: true,\n                                            message: 'Debe aceptar esta opción' \n                                        }\n                                    })} \n                                />                                    \n                                <label className=\"form-check-label\" htmlFor=\"acceptPersonalData\">\n                                    Acepto la <a href=\"!#\" className=\"text-secondary is-invalid\">Política de Protección de Datos Personales</a> y los <a href=\"!#\" className=\"text-secondary\">Términos y Condiciones</a>\n                                </label>\n                            </div>\n                            <div className=\"mb-3\">\n                                <span className=\"invalid-feedback text-small d-block\">\n                                    {errors?.acceptPersonalData?.message}\n                                </span>\n                            </div>\n                            <div className=\"form-check mb-3\">\n                                <input \n                                    className={`form-check-input ${errors.acceptPersonalData ? 'is-invalid' : ''}`}                                    \n                                    id=\"acceptCommercialCommunication\" \n                                    name=\"acceptCommercialCommunication\"\n                                    type=\"checkbox\" \n                                    value=\"1\" \n                                    {...register(\"acceptCommercialCommunication\", { \n                                        required:{\n                                            value: true,\n                                            message: 'Debe aceptar esta opción' \n                                        }\n                                    })} \n                                /> \n                                <label className=\"form-check-label\" htmlFor=\"acceptCommercialCommunication\">\n                                    Acepto la <a href=\"!#\" className=\"text-secondary\">Política de Envío de Comunicaciones Comerciales</a>\n                                </label>\n                            </div>\n                            <div className=\"mb-3\">\n                                <span className=\"invalid-feedback text-small d-block\">\n                                    {errors?.acceptCommercialCommunication?.message}\n                                </span>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg text-white-50\">COMENCEMOS</button>\n                            </div>\n                        </form>\n                    </article>\n                </section>                \n            </section>\n    )\n}\n\nexport default LoginForm\n\nLoginForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n}\n","import { useState, useContext, Fragment } from 'react'; \nimport axios from 'axios';\nimport UserContext from '../context/UserContext';\nimport { Redirect } from 'react-router'\n\n//components\nimport InfoInsurance from './InfoInsurance';\nimport LoginForm from './LoginForm';\n\nconst Login = () => {\n\n    const [isSubmitted, setIsSubmitted] = useState(false);\n    const [isValidUser, setIsValidUser] = useState(false);\n    const apiUrl = 'https://freestyle.getsandbox.com/dummy/obtenerdatospersona';\n\n    const user = useContext(UserContext);\n\n    const onSubmit = async data => {\n        setIsSubmitted(true);\n        const successfulResponse = 'success';\n        const { nDoc, dateOfBirth, phone } = data;\n        \n        try {\n            const response = await axios.post(apiUrl, {});\n            \n            if(response.data.tipo === successfulResponse){                \n                user.setUserData(response.data.data.tercero);\n                setIsValidUser(true);\n            } \n        } catch (error) {\n            console.log(`Error: ${error}`);\n        }   \n\n        return isSubmitted;\n    }\n\n    return (\n        !isSubmitted \n        ?   <Fragment>\n                <InfoInsurance showInfo={true} width=\"col-8\" />\n                <LoginForm onSubmit={onSubmit} /> \n            </Fragment>\n        :  \n            !isValidUser ? <p className=\"text-center\">Enviando...</p> : <Redirect to=\"/registro\" />\n    )\n}\n\nexport default Login;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InsuredPeopleTable = props => {\n\n    const { insureds, removeInsured } = props;\n\n    return (\n        <table className=\"my-4 table table-sm table-striped\">\n            <thead className=\"bg-primary\">\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Nro. Doc.</th>\n                    <th scope=\"col\">Ap. Pat.</th>\n                    <th scope=\"col\">Ap. Mat.</th>\n                    <th scope=\"col\">Nombres</th>\n                    <th scope=\"col\">F. Nacim.</th>\n                    <th scope=\"col\">Gén.</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    insureds.length > 0 \n                        ? insureds.map((insured, i) => (\n                            <tr key={insured.id}>\n                                <th scope=\"row\">{(i+1)}</th>\n                                <td>{insured.nDoc}</td>\n                                <td>{insured.lastNamePat}</td>\n                                <td>{insured.lastNameMat}</td>\n                                <td>{insured.name}</td>\n                                <td>{formatDateOfBirth(insured.dateOfBirth)}</td>\n                                <td>{insured.genre}</td>\n                                <td>\n                                    { (i > 0) \n                                        ? <button className=\"btn btn-danger btn-sm\" onClick={() => {removeInsured(insured.id)}}>Eliminar</button> \n                                        : ''\n                                    }\n                                </td>\n                            </tr> ))\n                        : <tr>\n                            <td colSpan=\"3\">No hay personas para asegurar</td>\n                        </tr>\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst formatDateOfBirth = dateOfBirth => {\n\n    if(!dateOfBirth.includes('/')){\n        const formattedFNac = dateOfBirth.split('-');\n        return `${formattedFNac[2]}/${formattedFNac[1]}/${formattedFNac[0]}`;\n    }\n    \n    return dateOfBirth;\n}\n\nexport default InsuredPeopleTable;\n\nInsuredPeopleTable.propTypes = {    \n    insureds: PropTypes.array.isRequired,\n    removeInsured: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Step = props => {\n\n    const { step } = props;\n\n    return (\n        <article className=\"ms-5 ps-5 my-2 w-100\">\n            <p><span className=\"text-primary\">{step}</span><span className=\"text-secondary\"> DE 3</span></p>\n        </article>\n    )\n}\n\nexport default Step;\n\nStep.propTypes = {\n    step: PropTypes.string.isRequired,\n}","import React, { Fragment, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Link } from \"react-router-dom\";\n\n//components\nimport Headline from './Headline';\nimport InsuredPeopleTable from './InsuredPeopleTable';\nimport Step from './Step';\n\nconst RegisterForm = props => {\n    \n    console.log('RegisterForm');\n    const adultMinAge = 18;\n    const dateFormat = 'YYYY-MM-DD';\n    const limitDate = moment(new Date()).subtract(adultMinAge, \"years\").format(dateFormat);\n\n    const [ maxAllowedDate, setMaxAllowedDate ] = useState(limitDate);\n    const [ showInsuredsTable, setShowInsuredsTable ] = useState(false);\n\n    const { addInsured, insureds, removeInsured, userData } = props;\n\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm();\n\n    const { apellidoMaterno, apellidoPaterno, fecNacimiento, nombres, numDocumento, sexo } = userData;\n    const formattedFNac = fecNacimiento.split('/');\n    const formattedDateOfBirth = `${formattedFNac[2]}-${formattedFNac[1]}-${formattedFNac[0]}`;\n\n    useEffect(() => {\n        setValue('nDoc', numDocumento, { shouldValidate: true });\n        setValue('name', nombres, { shouldValidate: true });\n        setValue('lastNamePat', apellidoPaterno, { shouldValidate: true });\n        setValue('lastNameMat', apellidoMaterno, { shouldValidate: true });\n        setValue('dateOfBirth', formattedDateOfBirth, { shouldValidate: true });\n        setValue('genre', sexo, { shouldValidate: true });\n    }, [])\n\n    const onSubmit = (data, e) => {\n        e.preventDefault();\n        \n        if(errors){\n            addInsured(data);\n            e.target.reset();\n            setValue('insurance', 'family', { shouldValidate: true });\n        }\n    }\n\n    const showInsuredPeopleTable = () => {\n        setMaxAllowedDate(moment(new Date()).format(dateFormat));\n        setShowInsuredsTable(true);\n        resetInputs();        \n    }\n\n    const hideInsuredPeopleTable = () => {\n        setMaxAllowedDate(limitDate);\n        setShowInsuredsTable(false);\n    }\n\n    const resetInputs = () => {\n        setValue('nDoc', '');\n        setValue('name', '');\n        setValue('lastNamePat', '');\n        setValue('lastNameMat', '');\n        setValue('dateOfBirth', '');\n        setValue('genre', '');\n        setValue('insurance', 'family', { shouldValidate: true });\n    }\n\n    return (\n        <section className=\"col-8 text-secondary p-right-40\">\n            <Step step=\"PASO 1\" />\n            <section className=\"w-75 mx-auto\">\n                <Headline title1=\"Hola, \" title2={nombres} subtitle=\"Valida que los datos sean correctos\" />     \n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <article className=\"mt-4\">\n                        <p className=\"fs-4\">Datos personales del titular</p>\n                    </article>                    \n                    <div className=\"form-floating input-group mb-3\">\n                        <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">DNI</button>\n                        <ul className=\"dropdown-menu\">\n                            <li><a className=\"dropdown-item\" href=\"!#\">DNI</a></li>\n                            <li><a className=\"dropdown-item\" href=\"!#\">CE</a></li>\n                        </ul>\n                        <input \n                            aria-label=\"Tipo doc.\"\n                            className={`form-control ${errors.nDoc ? 'is-invalid' : ''}`}\n                            id=\"nDoc\" \n                            name=\"nDoc\" \n                            type=\"num\" \n                            {...register(\"nDoc\", { \n                                required:{\n                                    value: true,\n                                    message: 'Debe ingresar un documento de identidad' \n                                },\n                                pattern: {\n                                    value: /^[0-9]*$/,\n                                    message: 'El nro. de doc. sólo debe tener números'\n                                },\n                                validate: value => value.length === 8 || 'El nro. de doc. debe tener 8 dígitos' \n                            })}\n                        />\n                        <label className=\"ms-5 ps-4\" htmlFor=\"nDoc\">Nro. de documento</label>\n                    </div>\n                    <div className=\"mb-3\">\n                        <span className=\"invalid-feedback text-small d-block\">\n                            {errors?.nDoc?.message}\n                        </span>\n                    </div>              \n                    <div className=\"form-floating mb-3\">\n                        <input                     \n                            className={`form-control ${errors.name ? 'is-invalid' : ''}`} \n                            id=\"name\" \n                            name=\"name\"\n                            type=\"text\" \n                            {...register(\"name\", { \n                                required:{\n                                    value: true,\n                                    message: 'Debe ingresar su nombre' \n                                }\n                            })}\n                        />\n                        <label htmlFor=\"floatingInput\">Nombres</label>\n                    </div>        \n                    <div className=\"mb-3\">\n                        <span className=\"invalid-feedback text-small d-block\">\n                            {errors?.name?.message}\n                        </span>\n                    </div>  \n                    <div className=\"form-floating mb-3\">\n                        <input                     \n                            className={`form-control ${errors.lastNamePat ? 'is-invalid' : ''}`} \n                            id=\"lastNamePat\" \n                            name=\"lastNamePat\"\n                            type=\"text\" \n                            {...register(\"lastNamePat\", { \n                                required:{\n                                    value: true,\n                                    message: 'Debe ingresar su apellido paterno' \n                                }\n                            })}\n                        />\n                        <label htmlFor=\"floatingInput\">Apellido Paterno</label>\n                    </div>        \n                    <div className=\"mb-3\">\n                        <span className=\"invalid-feedback text-small d-block\">\n                            {errors?.lastNamePat?.message}\n                        </span>\n                    </div>  \n                    <div className=\"form-floating mb-3\">\n                        <input                     \n                            className={`form-control ${errors.lastNameMat ? 'is-invalid' : ''}`} \n                            id=\"lastNameMat\" \n                            name=\"lastNameMat\"\n                            type=\"text\" \n                            {...register(\"lastNameMat\", { \n                                required:{\n                                    value: true,\n                                    message: 'Debe ingresar su apellido materno' \n                                }\n                            })}\n                        />\n                        <label htmlFor=\"floatingInput\">Apellido Materno</label>\n                    </div>        \n                    <div className=\"mb-3\">\n                        <span className=\"invalid-feedback text-small d-block\">\n                            {errors?.lastNameMat?.message}\n                        </span>\n                    </div>          \n                    <div className=\"form-floating mb-3\">\n                        <input \n                            className={`form-control ${errors.dateOfBirth ? 'is-invalid' : ''}`}                                    \n                            id=\"dateOfBirth\" \n                            name=\"dateOfBirth\"\n                            type=\"date\"\n                            max={maxAllowedDate}\n                            {...register(\"dateOfBirth\", { \n                                required:{\n                                    value: true,\n                                    message: 'Debe ingresar una fecha' \n                                }                                        \n                            })}\n                        />\n                        <label htmlFor=\"dateOfBirth\">Fecha de nacimiento</label>\n                    </div>\n                    <div className=\"mb-3\">\n                        <span className=\"invalid-feedback text-small d-block\">\n                            {errors?.dateOfBirth?.message}\n                        </span>\n                    </div>\n                    <div className=\"form-group mb-3\">\n                        <div className=\"mb-1\">\n                            <label className=\"form-label mb-0\">Género:</label>\n                        </div>\n                        <div className=\"my-2 form-check\">\n                            <input \n                                className={`form-check-input ${errors.genre ? 'is-invalid' : ''}`} \n                                type=\"radio\" name=\"genre\" id=\"M\" value=\"M\" \n                                {...register(\"genre\", { \n                                    required:{\n                                        value: true,\n                                        message: 'Debe ingresar su género' \n                                    }\n                                })}\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"M\">Masculino</label>       \n                        </div>\n                        <div className=\"my-2 form-check\">\n                            <input \n                                className={`form-check-input ${errors.genre ? 'is-invalid' : ''}`} \n                                type=\"radio\" name=\"genre\" id=\"F\" value=\"F\" \n                                {...register(\"genre\", { \n                                    required:{\n                                        value: true,\n                                        message: 'Debe ingresar su género' \n                                    }\n                                })}\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"F\">Femenino</label>                \n                        </div>                                           \n                    </div> \n                    <div className=\"mb-3\">\n                        <span className=\"invalid-feedback text-small d-block\">\n                            {errors?.genre?.message}\n                        </span>\n                    </div>     \n                    <div className=\"form-group my-3\">\n                        <div className=\"my-1\">\n                            <label className=\"form-label mb-0\">¿A quién vamos a asegurar?</label>\n                        </div>\n                        <div className=\"my-2 form-check\">\n                            <input \n                                className={`form-check-input ${errors.insurance ? 'is-invalid' : ''}`} \n                                id=\"personal\"\n                                name=\"insurance\"  \n                                type=\"radio\" \n                                value=\"personal\" \n                                onClick={() => hideInsuredPeopleTable()}\n                                {...register(\"insurance\", { \n                                    required:{\n                                        value: true,\n                                        message: 'Debe ingresar a quién/quiénes va a asegurar' \n                                    }\n                                })}\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"personal\">Sólo a mí</label>       \n                        </div>\n                        <div className=\"my-2 form-check\">\n                            <input \n                                className={`form-check-input ${errors.insurance ? 'is-invalid' : ''}`} \n                                id=\"family\"\n                                name=\"insurance\"  \n                                type=\"radio\" \n                                value=\"family\" \n                                onClick={() => {showInsuredPeopleTable()}}\n                                {...register(\"insurance\", { \n                                    required:{\n                                        value: true,\n                                        message: 'Debe ingresar a quién/quiénes va a asegurar' \n                                    }\n                                })}\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"family\">A mí y a mi familia</label>                \n                        </div>\n                        <div className=\"mb-3\">\n                            <span className=\"invalid-feedback text-small d-block\">\n                                {errors?.insurance?.message}\n                            </span>\n                        </div>                        \n                    </div> \n                    { showInsuredsTable \n                        ? <Fragment>\n                            <div className=\"mt-5 d-flex justify-content-end\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg text-white-50 fs-6\">Agregar asegurado</button>\n                            </div>\n                            <InsuredPeopleTable insureds={insureds} removeInsured={removeInsured} /> \n                        </Fragment>                      \n                        : ''\n                    }\n                    <div className=\"mt-5 d-flex justify-content-end\">\n                        <Link to=\"/elige-tu-proteccion\" className=\"btn btn-primary btn-lg text-white-50 fs-6\">{`CONTINUAR >`}</Link>\n                    </div>\n                </form> \n            </section>\n        </section>\n    )\n}\n\nexport default RegisterForm;\n\nRegisterForm.propTypes = {    \n    addInsured: PropTypes.func.isRequired,\n    insureds: PropTypes.array.isRequired,\n    removeInsured: PropTypes.func.isRequired\n}","import React, { Fragment, useContext, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid'; \n\n//components\nimport InfoInsurance from './InfoInsurance';\nimport RegisterForm from './RegisterForm';\n\n//context\nimport UserContext from '../context/UserContext';\n\nconst Register = () => {\n\n    const { userData, insureds, setInsureds } = useContext(UserContext);          \n    const { apellidoMaterno, apellidoPaterno, fecNacimiento, nombres, numDocumento, sexo } = userData;\n\n    const insuredPeople = [{\n        id: uuidv4(),\n        nDoc: numDocumento,\n        name: nombres,\n        lastNamePat: apellidoPaterno,\n        lastNameMat: apellidoMaterno,\n        dateOfBirth: fecNacimiento,\n        genre: sexo\n    }];\n\n    useEffect(() => {\n        setInsureds(insuredPeople);\n    }, [])\n\n    const addInsured = insured => {\n        insured.id = uuidv4();\n        setInsureds([...insureds, insured]);\n    }\n\n    const removeInsured = id => {\n        setInsureds(insureds.filter(insured => insured.id !== id));\n    }\n\n    return (\n        <Fragment>\n            <InfoInsurance showInfo={false} width=\"col-4\" />\n            <RegisterForm addInsured={addInsured} insureds={insureds} removeInsured={removeInsured} userData={userData}/> \n        </Fragment>\n        \n    )\n}\n\nexport default Register\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst InsurancePlan = props => {\n\n    const { planName, price } = props;\n\n    return (\n        <div className=\"mx-2 mb-3\">\n            <div className=\"label-cont\">\n                <label className=\"form-check-label fs-5 text-uppercase\" htmlFor=\"family\">{planName}</label>                                           \n            </div>\n            <div className=\"d-flex justify-content-start\">\n                <div className=\"pt-3\">\n                    <sup>S/.</sup>\n                </div>\n                <div>\n                    <p className=\"mb-0 fs-3\">{price}</p>    \n                </div>                                                                \n            </div>       \n            <small>mensual</small>\n        </div>          \n    )\n}\n\nexport default InsurancePlan;\n\nInsurancePlan.propTypes = {    \n    planName: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PlanBenefits = props => {\n\n    const { planName, planPrice, benefits } = props;\n    const { benef1, benef2, benef3, benef4 } = benefits;\n\n    return (\n        <section className=\"border border-gray rounded m-1 text-secondary\">\n            <article className=\"bg-gray text-center\">\n                <h6 className=\"py-2\">Cuentas con estos beneficios</h6>\n            </article>\n            <section className=\"pt-4 ps-4 pb-4 pe-3\">\n                <div className=\"row ms-3 me-0 pb-3 border-bottom border-gray\">\n                    <div className=\"col-8 px-0\">\n                        <span className=\"fs-4\">Cobertura máxima</span>\n                        <p className=\"fs-1\">S/. {planPrice}</p>\n                        <small className=\"bg-green rounded-pill px-2 py-1 text-white text-uppercase\">Plan {planName}</small>\n                    </div>\n                    <div className=\"col-4 border-start border-gray\">\n                        <div className=\"h-100 d-flex justify-content-end align-items-center px-3\">\n                            <img className=\"w-75\" src=\"/img/Illustration.png\" alt=\"Plan\"/>\n                        </div>\n                    </div>\n                </div>                \n            </section>\n            <article className=\"benefits\">\n                <ul className=\"all-benefits\">\n                    <li className=\"my-3\"><span className=\"fs-4\">Lima </span><small>(zona de cobertura)</small></li>\n                    <li className=\"my-3\"><span className=\"fs-4\">+30 clínicas </span><small>(en red afiliada)</small></li>\n                </ul>\n                <ul className=\"plan-benefits\">\n                    <li className={`my-1 ${enableBenefit(benef1)}`}>Médico a domicilio</li>\n                    <li className={`my-1 ${enableBenefit(benef2)}`}>Chequeos preventivos</li>\n                    <li className={`my-1 ${enableBenefit(benef3)}`}>Reembolso nacional</li>\n                    <li className={`my-1 ${enableBenefit(benef4)}`}>Reembolso internacional</li>\n                </ul>\n            </article>\n        </section>\n    )\n}\n\nexport default PlanBenefits;\n\nconst enableBenefit = benef => {\n    return benef ? 'text-secondary' : 'text-silver text-decoration-line-through';\n}\n\nPlanBenefits.propTypes = {    \n    benefits: PropTypes.object.isRequired,\n    planName: PropTypes.string.isRequired,\n    planPrice: PropTypes.string.isRequired    \n}","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst AccordionServiceItem = props => {\n\n    const { collapsed, descServiceItem, expanded, idAccordion, numberItem, titleItem } = props;\n\n    return (\n        <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id={`heading${numberItem}`}>\n                <button className=\"accordion-button ps-0 py-4\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target={`#collapse${numberItem}`} aria-expanded={expanded} aria-controls={`collapse${numberItem}`}>\n                    {titleItem}\n                </button>\n            </h2>\n            <div id={`collapse${numberItem}`} className={`accordion-collapse ${collapsed}`} aria-labelledby={`heading${numberItem}`} data-bs-parent={idAccordion}>\n                <div className=\"accordion-body\">\n                    <p>{descServiceItem}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AccordionServiceItem;\n\nAccordionServiceItem.propTypes = {    \n    collapsed: PropTypes.string.isRequired,\n    descServiceItem: PropTypes.string.isRequired,\n    expanded: PropTypes.string.isRequired,\n    idAccordion: PropTypes.string.isRequired,\n    numberItem: PropTypes.string.isRequired,\n    titleItem: PropTypes.string.isRequired    \n}\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport \"bootstrap/dist/js/bootstrap.esm.min\";\n\n//components\nimport Headline from './Headline';\nimport Step from './Step';\nimport InsurancePlan from './InsurancePlan';\nimport PlanBenefits from './PlanBenefits';\nimport AccordionServiceItem from './AccordionServiceItem';\n\nconst ChooseProtectionForm = props => {\n\n    console.log('ChooseProtectionForm');\n    \n    const idAccordion = 'accordionServices';\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const [ maxCoverage, setMaxCoverage ] = useState('1MM');\n    const [ planCoverageName, setPlanCoverageName ] = useState('básico');\n    const [ listOfBenefits, setListOfBenefits ] = useState({ benef1: false, benef2: false, benef3: false, benef4: false })\n\n    const { servicesAndExclusions } = props;\n    const onSubmit = (data, e) => {\n        \n        e.preventDefault();\n        \n        if(errors){\n            props.onSubmit(data);\n        } \n    }\n\n    const changePlanData = (coverage, planCovName, listBenefits) => {\n        if(coverage !== maxCoverage){\n            setMaxCoverage(coverage);\n        }\n        if(planCovName !== planCoverageName){\n            setPlanCoverageName(planCovName);\n        }  \n        \n        setListOfBenefits(listBenefits)\n    }\n\n    return (\n        <section className=\"col-8 text-secondary p-right-40\">\n            <Step step=\"PASO 2\" />\n            <section className=\"d-table w-75 mx-auto\">\n                <Headline title1=\"Elige \" title2=\"tu protección\" subtitle=\"Selecciona tu plan de salud ideal\" />   \n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <section className=\"row mx-0 my-5\">                    \n                        <article className=\"col border border-gray rounded m-1 p-0\">\n                            <div className=\"d-flex justify-content-end m-1\">\n                                <input \n                                    className={`form-check-input ${errors.plan ? 'is-invalid' : ''}`} \n                                    defaultChecked\n                                    id=\"family\"\n                                    name=\"plan\"  \n                                    type=\"radio\" \n                                    value=\"basic\" \n                                    onClick={() => changePlanData('1MM', 'básico', { benef1: false, benef2: false, benef3: false, benef4: false })}\n                                    {...register(\"plan\", { \n                                        required:{\n                                            value: true,\n                                            message: 'Debe elegir un plan' \n                                        }\n                                    })}\n                                />\n                            </div>\n                            <InsurancePlan planName=\"Básico\" price={160} />\n                        </article>\n                        <article className=\"col border border-gray rounded m-1 p-0\">\n                            <div className=\"d-flex justify-content-end m-1\">\n                                <input \n                                    className={`form-check-input ${errors.plan ? 'is-invalid' : ''}`} \n                                    id=\"family\"\n                                    name=\"plan\"  \n                                    type=\"radio\" \n                                    value=\"advanced\" \n                                    onClick={() => changePlanData('5MM', 'avanzado', { benef1: true, benef2: true, benef3: false, benef4: false })}\n                                    {...register(\"plan\", { \n                                        required:{\n                                            value: true,\n                                            message: 'Debe elegir un plan' \n                                        }\n                                    })}\n                                />\n                            </div>\n                            <InsurancePlan planName=\"Avanzado\" price={200} />\n                        </article>\n                        <article className=\"col border border-gray rounded m-1 p-0\">\n                            <div className=\"d-flex justify-content-end m-1\">\n                                <input \n                                    className={`form-check-input ${errors.plan ? 'is-invalid' : ''}`} \n                                    id=\"family\"\n                                    name=\"plan\"  \n                                    type=\"radio\" \n                                    value=\"premium\" \n                                    onClick={() => changePlanData('10MM', 'premium', { benef1: true, benef2: true, benef3: true, benef4: false })}\n                                    {...register(\"plan\", { \n                                        required:{\n                                            value: true,\n                                            message: 'Debe elegir un plan' \n                                        }\n                                    })}\n                                />\n                            </div>\n                            <InsurancePlan planName=\"Premium\" price={250} />\n                        </article>\n                        <article className=\"col border border-gray rounded m-1 p-0\">\n                            <div className=\"d-flex justify-content-end m-1\">\n                                <input \n                                    className={`form-check-input ${errors.plan ? 'is-invalid' : ''}`} \n                                    id=\"family\"\n                                    name=\"plan\"  \n                                    type=\"radio\" \n                                    value=\"full\" \n                                    onClick={() => changePlanData('20MM', 'full', { benef1: true, benef2: true, benef3: true, benef4: true })}\n                                    {...register(\"plan\", { \n                                        required:{\n                                            value: true,\n                                            message: 'Debe elegir un plan' \n                                        }\n                                    })}\n                                />\n                            </div>\n                            <InsurancePlan planName=\"Full\" price={500} />\n                        </article>\n                    </section>  \n                    <PlanBenefits planName={planCoverageName} planPrice={maxCoverage} benefits={listOfBenefits} />\n                    <section className=\"my-4\">\n                        <p className=\"mb-0 text-primary fs-4\">Revisa nuestros</p>\n                        <p className=\"mb-2 fs-4\">servicios y exclusiones</p>\n                    </section>     \n                    <section className=\"accordion-container\">\n                        <div className=\"accordion\" id={idAccordion}>\n                            {\n                                servicesAndExclusions.map(servAndExcl => (\n                                    <AccordionServiceItem \n                                        key={servAndExcl.id}\n                                        collapsed={servAndExcl.collapsed}\n                                        descServiceItem={servAndExcl.descServiceItem}\n                                        expanded={servAndExcl.expanded}\n                                        idAccordion={`#${idAccordion}`}\n                                        numberItem={servAndExcl.numberItem}\n                                        titleItem={servAndExcl.titleItem}\n                                    />\n                                ))\n                            }\n                        </div>\n                    </section>\n                    <section className=\"d-flex justify-content-between mt-5\">\n                        <div>\n                            <a href=\"!#\" className=\"ms-4 text-purple\">ENVIAR COTIZACIÓN POR CORREO</a>\n                        </div>                            \n                        <button type=\"submit\" className=\"btn btn-primary\">COMPRAR PLAN</button>\n                    </section>\n                </form>      \n            </section>\n        </section>\n    )\n}\n\nexport default ChooseProtectionForm\n\nChooseProtectionForm.propTypes = {    \n    servicesAndExclusions: PropTypes.array.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}","import React, { memo } from 'react';\n\nconst RegisterSuccessFul = () => {\n\n    return (\n        <section className=\"col-8\">\n            <section className=\"h-100 d-flex w-75 mx-auto\">\n                <article className=\"d-flex align-items-center\">\n                    <div className=\"thanks border-top border-secondary pt-4\">\n                        <h2 className=\"fs-1\" ><span className=\"text-secondary\">¡Gracias por </span><span className=\"text-primary\">confiar en<br/>nosotros!</span></h2>\n                        <p className=\"fs-5 text-secondary\">Queremos conocer mejor la salud de los asegurados. Un asesor <span className=\"fw-bolder\">se<br/>pondrá en contacto</span> contigo en las siguientes <span className=\"fw-bolder\">48 horas</span></p>\n                        <div className=\"d-flex justify-content-end my-5\">\n                            <a href=\"!#\" className=\"btn btn-primary btn-lg px-5\">IR A SALUD</a>\n                        </div>  \n                    </div>                       \n                </article>                           \n            </section>            \n        </section>\n    )\n}\n\nexport default memo(RegisterSuccessFul);\n","import React, { Fragment, useContext, useState } from 'react';\n//import axios from 'axios';\n\n//context\nimport UserContext from '../context/UserContext';\n\n//components\nimport InfoInsurance from './InfoInsurance';\nimport ChooseProtectionForm from './ChooseProtectionForm';\nimport RegisterSuccessFul from './RegisterSuccessFul';\n\nconst ChooseProtection = () => {\n\n    /*const apiUrl = '';\n    const successfulResponse = 200;*/\n    const servicesAndExclusions = [\n        {\n            id: 1,\n            collapsed: '',\n            descServiceItem: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n            expanded:'true',\n            numberItem:'One',\n            titleItem:'Servicios brindados'\n        },\n        {\n            id: 2,\n            collapsed: 'collapsed',\n            descServiceItem: \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source.\",\n            expanded:'true',\n            numberItem:'Two',\n            titleItem:'Exclusiones'\n        } \n    ]\n\n    const { insureds } = useContext(UserContext);    \n    const [ isRegistered, setIsRegistered ] = useState(false);\n\n    const onSubmit = async data => {\n        data.client = [...insureds].shift();        \n        data.insuredPeople = insureds;\n\n        /*\n        //To submit to API:\n        try {\n            const response = await axios.post(apiUrl, {});\n            \n            if(response.status === successfulResponse){                \n                setIsRegistered(true);\n            } \n        } catch (error) {\n            console.log(`Error: ${error}`);\n        }*/   \n        \n        setIsRegistered(true); \n    }\n\n    return (\n        !isRegistered \n            ? <Fragment>\n                    <InfoInsurance showInfo={false} width=\"col-4\" />\n                    <ChooseProtectionForm onSubmit={onSubmit} servicesAndExclusions={servicesAndExclusions}/> \n            </Fragment> \n            : <Fragment>\n                    <InfoInsurance showInfo={false} width=\"col-4\" />\n                    <RegisterSuccessFul />\n            </Fragment>\n    )\n}\n\nexport default ChooseProtection\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//styles\nimport './css/App.css';\n\n//context\nimport UserProvider from './context/UserProvider';\n\n//components\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport ChooseProtection from './components/ChooseProtection';\n\nconst App = () => {\n    \n    return (\n        <main>\n            <section className=\"row\">                \n                <UserProvider>\n                    <Router>\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <Login />\n                            </Route>   \n                            <Route exact path=\"/registro\">\n                                <Register />\n                            </Route>    \n                            <Route exact path=\"/elige-tu-proteccion\">\n                                <ChooseProtection />\n                            </Route> \n                        </Switch>                                         \n                    </Router>                    \n                </UserProvider>                \n            </section>\n        </main>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}